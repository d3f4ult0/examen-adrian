//
//  SearchProductsViewController.swift
//  examen
//
//  Created BE-006 on 29/06/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class SearchProductsViewController: UIViewController, SearchProductsViewProtocol {
    @IBOutlet weak var searchTextField: UITextField!
    @IBOutlet weak var tagsCollectionView: TagCollectionView!
    @IBOutlet weak var productsCollectionView: ProductsCollectionView!
    
    @IBOutlet weak var viewLoad: UIView!
    var presenter: SearchProductsPresenterProtocol?
    
    //Variables
    var tags:[String] = []
    var products:Products?
    
	override func viewDidLoad() {
        super.viewDidLoad()
        configUI()
    }
    
    func configUI(){
        if let savedTags = presenter?.getTags(){
            tags = savedTags
        }
        tagsCollectionView.register(UINib(nibName: "TagCollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "TagCell")
        if tags.count > 0{
            tagsCollectionView.setValues(tags: tags)
        }

        
        productsCollectionView.register(UINib(nibName: "ProductCollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "ProductCell")
//        productsCollectionView.setValues(products: products)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: animated)
    }
    
    @IBAction func searchButtonAction(_ sender: Any) {
        let text = searchTextField.text?.uppercased()
        if text != "" && text != nil {
            //Se compara lo escrito con las tags guardadas
            if !tags.contains(text!){
                tagsCollectionView.addElement(element: text!)
                tags.append(text!)
                presenter?.saveTags(tags: tags)
            }
            viewLoad.isHidden = false
            presenter?.searchProduct(text: text!, page: 1)
        }
    }
    
    func returnInfo(product:Products){
        viewLoad.isHidden = true
        productsCollectionView.addElement(element: product)
    }
    
    func returnError(){
        let alert = UIAlertController(title: "Error", message: "Se termino el tiempo de espera y el servidor no respondio", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Cerrar", style: .default, handler: nil))
        self.present(alert, animated: true, completion: {
            self.viewLoad.isHidden = true
        })
    }
    
}
